@using website.Pages.Works.Datas

<Card>

    <CardMedia Style="height:256px;"
               Image="@WorkData.ImagePath"
               Title="@WorkData.Title" />
    <CardContent>
        <Typography Variant="@TypographyVariant.H6"
                    Component="h5">
            @WorkData.Title
        </Typography>

        <Typography Variant="@TypographyVariant.Body1"
                    Color="@Color.TextSecondary">
            @WorkData.Description
        </Typography>
        <Divider Style="margin:4px;"/>
        <Typography Variant="@TypographyVariant.Body2" Color="@Color.TextSecondary">
            Platform: @(string.Join(", ", convertToFlags(WorkData.SupportPlatform).Select(f => f.ToString())))
        </Typography>
        <Typography Variant="@TypographyVariant.Body2" Color="@Color.TextSecondary">
            Status: @(WorkData.Status.ToString())
        </Typography>
    </CardContent>
    <Divider />
    <CardActions>
        <Button Class="styled-linkbutton" Role="link">
            <Hyperlink Href="@WorkData.ReadMoreURL">Read more</Hyperlink>
        </Button>
    </CardActions>
</Card>


@code {
    [Parameter]
    public AnyWorkData WorkData { get; set; }

    IEnumerable<SupportPlatform> convertToFlags(SupportPlatform platform)
    {
        foreach(var flag in Enum.GetValues<SupportPlatform>())
        {
            if(platform.HasFlag(flag) && flag != SupportPlatform.none)
            {
                yield return flag;
            }
        }
    }
}

