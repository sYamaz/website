@inject NavigationManager navman
<style>


    .styled-menu-item:not(:active):is(:hover) {
        /*カーソル当てた時の強調*/
        background-color: var(--theme-palette-primary-main, #90caf9);
        text-decoration: underline;
        color:white;
        
    }

    .styled-menu-item:active{
        /*現在表示しているページのMenuItemの色変更*/
        background-color: var(--theme-palette-primary-main, #fff)
    }

    .styled-nav-item:is(:hover) {
        background-color: var(--theme-palette-primary-main, #90caf9);
        text-decoration: underline;
    }

    .styled-nav-item__active{
        background-color: var(--theme-palette-primary-main, #fff)
    }

</style>

<header class="navbar">
    <div style="flex-grow: 1;" class="hidden-root">
        <AppBar Position="@AppBarPosition.Fixed">
            <Toolbar>

                <Button OnClick="@(s => NavTo(""))" Color="Color.Inherit" Style="text-transform:none;">
                    <Typography NoWrap Variant="TypographyVariant.H6">
                        sYamaz
                    </Typography>
                </Button>

                <!---Spacer-->
                <div style="flex-grow: 1;" />

                <Hidden ExtraSmallDown Context="HiddenContext">
                    <div class="@HiddenContext.Class">
                        
                        <Button Style="text-transform:none;" Color="Color.Inherit" Class="@("styled-nav-item" + ClassActive("apps"))" OnClick="@(s => NavTo("apps"))"><Typography NoWrap Variant="TypographyVariant.Body1">Apps</Typography></Button>
                        <Button Style="text-transform:none;" Color="Color.Inherit" Class="@("styled-nav-item" + ClassActive("posts"))" OnClick="@(s => NavTo("posts"))"><Typography NoWrap Variant="TypographyVariant.Body1">Posts</Typography></Button>
                        <Button Style="text-transform:none;" Color="Color.Inherit" Class="@("styled-nav-item" + ClassActive("https://github.com/sYamaz/website"))" OnClick="@(s => NavTo("https://github.com/sYamaz/website"))"><Typography NoWrap Variant="TypographyVariant.Body1">Source</Typography></Button>
                    </div>
                </Hidden>
                <!--menuは画面サイズが小さい時だけ表示-->
                <Hidden SmallUp Context="HiddenContext">
                    <div class="@HiddenContext.Class">
                        <IconButton Edge="@IconButtonEdge.Start"
                                    aria-controls="customized-menu"
                                    aria-haspopup="true"
                                    Variant="@ButtonVariant.Contained"
                                    Color="@Color.Inherit"
                                    OnClick="@OnOpen"
                                    RootRef="@ButtonRef">
                            <!--Button.Contextで別名を設定しないと名前が被ってるエラーになる。-->
                            <MenuIcon />
                        </IconButton>
                        <Menu Id="customized-menu"
                              PaperStyle="border: 1px solid #d3d4d5"
                              Elevation="0"
                              AnchorVerticalOrigin="@VerticalOrigin.Bottom"
                              AnchorHorizontalOrigin="@HorizontalOrigin.Center"
                              TransformVerticalOrigin="@VerticalOrigin.Top"
                              TransformHorizontalOrigin="@HorizontalOrigin.Center"
                              Open="@Open"
                              KeepMounted
                              AnchorRef="@ButtonRef"
                              OnClose="@HandleClose">

                            <MenuItem Class="styled-menu-item" Selected="@(navman.Uri == navman.BaseUri + "")" OnClick="@(s => NavTo(""))">
                                <ListItemText Primary="About" />
                            </MenuItem>
                            <MenuItem Class="styled-menu-item" Selected="@(navman.Uri == navman.BaseUri + "apps")" OnClick="@(s => NavTo("apps"))">
                                <ListItemText Primary="Apps" />
                            </MenuItem>
                            <MenuItem Class="styled-menu-item" Selected="@(navman.Uri == navman.BaseUri + "posts")" OnClick="@(s => NavTo("posts"))">
                                <ListItemText Primary="Posts" />
                            </MenuItem>
                            <MenuItem Class="styled-menu-item" Selected="false" OnClick="@(s => NavTo("https://github.com/sYamaz/website"))">
                                <ListItemText Primary="Source" />
                            </MenuItem>
                        </Menu>
                    </div>
                </Hidden>


            </Toolbar>
        </AppBar>
        
    </div>
</header>


@code {


    private bool Open { set; get; }

    private IReference ButtonRef { set; get; } = new Reference();

    private void HandleClose(EventArgs args)
    {

        Open = false;

        StateHasChanged();
    }

    private void HandleClose(MenuCloseReason reason)
    {
        Open = false;

        StateHasChanged();
    }

    private void OnOpen()
    {


        Open = true;

        StateHasChanged();
    }

    private void NavTo(string page)
    {
        navman.NavigateTo(page);
        HandleClose(MenuCloseReason.BackdropClick);
    }

    private string ClassActive(string page)
    {
        System.Diagnostics.Debug.WriteLine(page);
        return navman.BaseUri + page == navman.Uri ? " styled-nav-item__active" : "";
        
    }
}

